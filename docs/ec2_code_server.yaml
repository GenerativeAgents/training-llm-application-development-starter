AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  InstanceVolumeSize:
    Type: Number
    Description: The size of the volume, in GiBs.
    Default: 30
  InstanceType:
    Description: The instance type.
    Type: String
    Default: c7i.large
    AllowedValues:
      [
        c4.large,
        c4.xlarge,
        c4.2xlarge,
        c4.4xlarge,
        c4.8xlarge,
        c5.large,
        c5.xlarge,
        c5.2xlarge,
        c5.4xlarge,
        c5.9xlarge,
        c5.12xlarge,
        c5.18xlarge,
        c5.24xlarge,
        c5a.large,
        c5a.xlarge,
        c5a.2xlarge,
        c5a.4xlarge,
        c5a.8xlarge,
        c5a.12xlarge,
        c5a.16xlarge,
        c5a.24xlarge,
        c5ad.large,
        c5ad.xlarge,
        c5ad.2xlarge,
        c5ad.4xlarge,
        c5ad.8xlarge,
        c5ad.12xlarge,
        c5ad.16xlarge,
        c5ad.24xlarge,
        c5d.large,
        c5d.xlarge,
        c5d.2xlarge,
        c5d.4xlarge,
        c5d.9xlarge,
        c5d.12xlarge,
        c5d.18xlarge,
        c5d.24xlarge,
        c5n.large,
        c5n.xlarge,
        c5n.2xlarge,
        c5n.4xlarge,
        c5n.9xlarge,
        c5n.18xlarge,
        c6a.large,
        c6a.xlarge,
        c6a.2xlarge,
        c6a.4xlarge,
        c6a.8xlarge,
        c6a.12xlarge,
        c6a.16xlarge,
        c6a.24xlarge,
        c6a.32xlarge,
        c6a.48xlarge,
        c6g.medium,
        c6g.large,
        c6g.xlarge,
        c6g.2xlarge,
        c6g.4xlarge,
        c6g.8xlarge,
        c6g.12xlarge,
        c6g.16xlarge,
        c6gd.medium,
        c6gd.large,
        c6gd.xlarge,
        c6gd.2xlarge,
        c6gd.4xlarge,
        c6gd.8xlarge,
        c6gd.12xlarge,
        c6gd.16xlarge,
        c6gn.medium,
        c6gn.large,
        c6gn.xlarge,
        c6gn.2xlarge,
        c6gn.4xlarge,
        c6gn.8xlarge,
        c6gn.12xlarge,
        c6gn.16xlarge,
        c6i.large,
        c6i.xlarge,
        c6i.2xlarge,
        c6i.4xlarge,
        c6i.8xlarge,
        c6i.12xlarge,
        c6i.16xlarge,
        c6i.24xlarge,
        c6i.32xlarge,
        c7g.medium,
        c7g.large,
        c7g.xlarge,
        c7g.2xlarge,
        c7g.4xlarge,
        c7g.8xlarge,
        c7g.12xlarge,
        c7g.16xlarge,
        c7gd.medium,
        c7gd.large,
        c7gd.xlarge,
        c7gd.2xlarge,
        c7gd.4xlarge,
        c7gd.8xlarge,
        c7gd.12xlarge,
        c7gd.16xlarge,
        c7gn.medium,
        c7gn.large,
        c7gn.xlarge,
        c7gn.2xlarge,
        c7gn.4xlarge,
        c7gn.8xlarge,
        c7gn.12xlarge,
        c7gn.16xlarge,
        c7i.large,
        c7i.xlarge,
        c7i.2xlarge,
        c7i.4xlarge,
        c7i.8xlarge,
        c7i.12xlarge,
        c7i.16xlarge,
        c7i.24xlarge,
        c7i.48xlarge,
        m4.large,
        m4.xlarge,
        m4.2xlarge,
        m4.4xlarge,
        m4.10xlarge,
        m4.16xlarge,
        m5.large,
        m5.xlarge,
        m5.2xlarge,
        m5.4xlarge,
        m5.8xlarge,
        m5.12xlarge,
        m5.16xlarge,
        m5.24xlarge,
        m5a.large,
        m5a.xlarge,
        m5a.2xlarge,
        m5a.4xlarge,
        m5a.8xlarge,
        m5a.12xlarge,
        m5a.16xlarge,
        m5a.24xlarge,
        m6a.large,
        m6a.xlarge,
        m6a.2xlarge,
        m6a.4xlarge,
        m6a.8xlarge,
        m6a.12xlarge,
        m6a.16xlarge,
        m6a.24xlarge,
        m6a.32xlarge,
        m6a.48xlarge,
        m7a.medium,
        m7a.large,
        m7a.xlarge,
        m7a.2xlarge,
        m7a.4xlarge,
        m7a.8xlarge,
        m7a.12xlarge,
        m7a.16xlarge,
        m7a.24xlarge,
        m7a.32xlarge,
        m7a.48xlarge,
        t2.nano,
        t2.micro,
        t2.small,
        t2.medium,
        t2.large,
        t2.xlarge,
        t2.2xlarge,
        t3.nano,
        t3.micro,
        t3.small,
        t3.medium,
        t3.large,
        t3.xlarge,
        t3.2xlarge,
        t3a.nano,
        t3a.micro,
        t3a.small,
        t3a.medium,
        t3a.large,
        t3a.xlarge,
        t3a.2xlarge,
        t4g.nano,
        t4g.micro,
        t4g.small,
        t4g.medium,
        t4g.large,
        t4g.xlarge,
        t4g.2xlarge
      ]
  AvailabilityZone:
    Description: The availability zone.
    Type: String
    Default: ap-northeast-1a
    AllowedValues: [ap-northeast-1a, ap-northeast-1c, ap-northeast-1d]
  CodeServerPort:
    Type: Number
    Description: The port code-server listens on.
    Default: 8888

Mappings:
  Constants:
    EC2:
      ImageId: '{{resolve:ssm:/aws/service/canonical/ubuntu/server/22.04/stable/current/amd64/hvm/ebs-gp2/ami-id}}'
    VPC:
      CidrBlock: 10.0.0.0/16
      PublicSubnetCidrBlock: 10.0.0.0/24
  # aws ec2 describe-managed-prefix-lists  --region <REGION> | jq -r '.PrefixLists[] | select (.PrefixListName == "com.amazonaws.global.cloudfront.origin-facing") | .PrefixListId'
  AWSRegions2PrefixListID:
    ap-northeast-1:
      PrefixList: pl-58a04531
    ap-northeast-2:
      PrefixList: pl-22a6434b
    ap-south-1:
      PrefixList: pl-9aa247f3
    ap-southeast-1:
      PrefixList: pl-31a34658
    ap-southeast-2:
      PrefixList: pl-b8a742d1
    ca-central-1:
      PrefixList: pl-38a64351
    eu-central-1:
      PrefixList: pl-a3a144ca
    eu-north-1:
      PrefixList: pl-fab65393
    eu-west-1:
      PrefixList: pl-4fa04526
    eu-west-2:
      PrefixList: pl-93a247fa
    eu-west-3:
      PrefixList: pl-75b1541c
    sa-east-1:
      PrefixList: pl-5da64334
    us-east-1:
      PrefixList: pl-3b927c52
    us-east-2:
      PrefixList: pl-b6a144df
    us-west-1:
      PrefixList: pl-4ea04527
    us-west-2:
      PrefixList: pl-82a045eb

Resources:
  ########### VPC Resources ###########
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !FindInMap [Constants, VPC, CidrBlock]
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Ref AWS::StackName

  InternetGateway:
    Type: AWS::EC2::InternetGateway
  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: VPCGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Ref AvailabilityZone
      CidrBlock: !FindInMap [Constants, VPC, PublicSubnetCidrBlock]
      MapPublicIpOnLaunch: true
  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref PublicRouteTable

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VPC
      GroupDescription: !Ref AWS::StackName
      SecurityGroupIngress:
        - Description: Allow from CloudFront
          IpProtocol: tcp
          FromPort: !Ref CodeServerPort
          ToPort: !Ref CodeServerPort
          SourcePrefixListId:
            !FindInMap [AWSRegions2PrefixListID, !Ref 'AWS::Region', PrefixList]
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0

  ########### SSM Resources ###########
  CodeServerPasswordSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Sub ${AWS::StackName}-Password
      GenerateSecretString:
        PasswordLength: 16
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete

  ########### EC2 Resources ###########
  InstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Principal:
              Service: ec2.amazonaws.com
      ManagedPolicyArns:
        - !Sub arn:${AWS::Partition}:iam::aws:policy/AmazonSSMManagedInstanceCore
      Policies:
        - PolicyName: SecretManagerGetSecretValue
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: secretsmanager:GetSecretValue
                Resource: !Ref CodeServerPasswordSecret
  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref InstanceRole

  Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !FindInMap [Constants, EC2, ImageId]
      InstanceType: !Ref InstanceType
      AvailabilityZone: !Ref AvailabilityZone
      NetworkInterfaces:
        - SubnetId: !Ref PublicSubnet
          AssociatePublicIpAddress: 'true'
          DeviceIndex: '0'
          GroupSet:
            - !Ref SecurityGroup
      IamInstanceProfile: !Ref InstanceProfile
      BlockDeviceMappings:
        - Ebs:
            VolumeSize: !Ref InstanceVolumeSize
            VolumeType: gp3
            DeleteOnTermination: true
            Encrypted: true
          DeviceName: /dev/sda1
      Tags:
        - Key: Name
          Value: !Ref AWS::StackName
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash

          set -o errexit
          set -o nounset
          set -o pipefail
          set -o xtrace

          # Install AWS CLI
          snap install aws-cli --classic
          aws --version

          # Install npm
          sudo apt-get update
          sudo apt-get install -y npm

          # Install code-server
          export HOME=/home/ubuntu
          curl -fsSL https://code-server.dev/install.sh | sh
          sudo systemctl enable --now code-server@ubuntu

          set +o xtrace
          sudo -u ubuntu tee /home/ubuntu/.config/code-server/config.yaml <<EOF
          bind-addr: 0.0.0.0:${CodeServerPort}
          cert: false
          auth: password
          hashed-password: "$(echo -n $(aws secretsmanager get-secret-value --secret-id '${CodeServerPasswordSecret.Id}' --query 'SecretString' --output text) | sudo npx argon2-cli -e)"
          EOF
          set -o xtrace

          sudo systemctl restart code-server@ubuntu

          # Setup directory
          sudo -u ubuntu mkdir -p /home/ubuntu/environment
          sudo chown -R ubuntu:ubuntu /home/ubuntu

          # Setup environment
          curl -L https://raw.githubusercontent.com/GenerativeAgents/training-llm-application-development-starter/refs/heads/main/docs/setup.sh | sudo -u ubuntu bash

  ########### CloudFront Resources ###########
  CachePolicy:
    Type: AWS::CloudFront::CachePolicy
    Properties:
      CachePolicyConfig:
        DefaultTTL: 86400
        MaxTTL: 31536000
        MinTTL: 1
        Name:
          # prettier-ignore
          !Join ['-', ['code-server', !Select [4, !Split ['-', !Select [2, !Split ['/', !Ref AWS::StackId]]]]]]
        ParametersInCacheKeyAndForwardedToOrigin:
          CookiesConfig:
            CookieBehavior: all
          EnableAcceptEncodingGzip: False
          HeadersConfig:
            HeaderBehavior: whitelist
            Headers:
              - Accept-Charset
              - Authorization
              - Origin
              - Accept
              - Referer
              - Host
              - Accept-Language
              - Accept-Encoding
              - Accept-Datetime
          QueryStringsConfig:
            QueryStringBehavior: all

  Distribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Enabled: True
        HttpVersion: http2
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
            - PUT
            - PATCH
            - POST
            - DELETE
          CachePolicyId: !Ref CachePolicy
          # Managed-AllViewer - see https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-origin-request-policies.html#:~:text=When%20using%20AWS,47e4%2Db989%2D5492eafa07d3
          OriginRequestPolicyId: 216adef6-5c7f-47e4-b989-5492eafa07d3
          TargetOriginId: !GetAtt Instance.PublicDnsName
          ViewerProtocolPolicy: allow-all
        Origins:
          - DomainName: !GetAtt Instance.PublicDnsName
            Id: !GetAtt Instance.PublicDnsName
            CustomOriginConfig:
              HTTPPort: !Ref CodeServerPort
              OriginProtocolPolicy: http-only

Outputs:
  PasswordURL:
    Description: AWS Secrets Manager URL for code-server password
    Value: !Sub
      - https://${AWS::Region}.console.aws.amazon.com/secretsmanager/secret?name=${SecretName}&region=${AWS::Region}
      - SecretName: !Sub ${AWS::StackName}-Password
    Export:
      Name: !Sub ${AWS::StackName}-Password
  URL:
    Description: code-server URL
    Value: !Sub https://${Distribution.DomainName}/?folder=/home/ubuntu/environment/training-llm-application-development-starter
    Export:
      Name: !Sub ${AWS::StackName}-URL
